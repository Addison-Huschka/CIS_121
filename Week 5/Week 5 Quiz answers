'''#1
def reverse_string(word):
    reversed_word = word[::-1]
    return reversed_word
print(reverse_string("hello"))

#2
def is_fever(input_temp):
    output = False
    unit = input_temp[-1]
    temp = int(input_temp[:-1])
    if unit == "F":
        if temp > 98.6:
            output = True
    elif unit == "C":
        if temp > 37:
            output = True
    return output
user_input = input("Enter a temp 00F or 00C: ")
print(f"Is {user_input} a fever? {is_fever(user_input)}")

#3
def is_boiling(input_temp):
    output = False
    unit = input_temp[-1]
    temp = int(input_temp[:-1])
    if unit == "F":
        if temp >= 212:
            output = True
    elif unit == "C":
        if temp >= 100:
            output = True
    return output
user_input = input("Enter a temp 000F or 000C: ")
print(f"Is {user_input} boiling? {is_boiling(user_input)}")

#4
def hamming_distance(str1,str2):
    if len(str1) != len(str2):
        raise ValueError
    distance = 0
    for letter in range(len(str1)):
        if str1[letter] != str2[letter]:
            distance += 1
    return distance
print(hamming_distance("abcde","bcdef"))
'''
#9
def flip_flop(word): 
    mid = len(word) // 2
    center = ""
    first_half = word[0:mid]
    if len(word) % 2 == 0:
        second_half = word[mid:]
    else:
        center = word[mid:len(word)-mid]
        second_half = word[mid+1:]
    return second_half + center + first_half
print(flip_flop("abcde")) 

'''
#1 
def pyramid_volume(base,height):
    volume = ((base**2)*height)/3
    return (f'{volume:.2f}')
print(pyramid_volume(3,4))

#2
import math
def cone_volume(radius, height):
    volume = math.pi*(((radius**2)*height)/3)
    return(f'{volume:.2f}')
print(cone_volume(3,3))

#3
def total_score(two_pointers,three_pointers):
    two_pointers *= 2
    three_pointers *= 3
    score = two_pointers + three_pointers
    return score
print(total_score(10,10))

#4
def total_score(aces,winning_shots):
    aces *= 2
    score = aces + winning_shots
    return score
print(total_score(2,3))

#5
def leg_counter(chickens,cows,pigs):
    chickens *= 2
    cows *= 4
    pigs *= 4
    legs = chickens + cows + pigs
    return legs
print(leg_counter(4,3,2))

#6
def battery_counter(dolls,cars,dogs):
    dolls *= 2
    cars *= 4
    dogs *= 6
    total = dolls + cars + dogs
    return total
print(battery_counter(4,3,2))

#7
def resting_rate(age,athl_goal):
    if 20 <= age <=39:
        if athl_goal == "Above Average":
            heart_rate = "47-72"
        else:
            heart_rate = "73-93"
    elif 40 <= age <=59:
        if athl_goal == "Above Average":
            heart_rate = "46-71"
        else:
            heart_rate = "72-94"
    elif 60 <= age <=79:
        if athl_goal == "Above Average":
            heart_rate = "45-70"
        else:
            heart_rate = "71-97"
    return heart_rate
print(resting_rate(45,"Below Average"))

#8
def pool_time(grade,time):
    if grade.lower() == "k":
        grade = 0
    if 0 <= int(grade) <=3:
        if time == "morning":
            pool_time = "9AM"
        else:
            pool_time = "1PM"
    elif 4 <= int(grade) <=8:
        if time == "morning":
            pool_time = "10AM"
        else:
            pool_time = "2PM"
    elif 9 <= int(grade) <=12:
        if time == "morning":
            pool_time = "11AM"
        else:
            pool_time = "3PM"
    return pool_time
print(pool_time("k","morning"))

#9
def traffic_light(light_color):
    if light_color == "green" or light_color == "Green":
        action = "Go"
    elif light_color == "yellow" or light_color == "Yellow":
        action = "Yield"
    elif light_color == "red" or "Red":
        action = "Stop"
    return action
print(traffic_light("green"))
 
#10
def access_rights(user_role):
    if user_role == "user":
        access = "limited"
    elif user_role == "guest":
        access = "view"
    elif user_role == "admin":
        access = "full"
    return access
print(access_rights("user"))

#11
def convert_knuts(knuts):
    output = ""
    galleons = knuts // 493
    remaining_knuts = knuts - (galleons * 493)
    sickle = remaining_knuts // 29
    remaining_knuts = remaining_knuts - (sickle * 29)
    if galleons > 0:
        output += f"{galleons} galleons "
    if sickle > 0:
        output += f"{sickle} sickles "
    if remaining_knuts > 0:
        output += f"{remaining_knuts} knuts "
    return output
knuts_input = int(input("Enter the number of knuts: "))
print(convert_knuts(knuts_input))

#12
def bronze_coin(bronze):
    output = ""
    gold = bronze // 300
    remaining_bronze = bronze - (gold * 300)
    silver = remaining_bronze // 20
    remaining_bronze = remaining_bronze - (silver * 20)
    if gold > 0:
        output += f"{gold} gold "
    if silver > 0:
        output += f"{silver} silver "
    if remaining_bronze > 0:
        output += f"{remaining_bronze} bronze "
    return output
bronze_input = int(input("Enter the number of bronze: "))
print(bronze_coin(bronze_input))

#13
from random import randint
value = randint(0,1)
def coin_flip(guess):
    if guess == value:
        output = "Correct!"
    else:
        output = "Incorrect!"
    return output
user_guess = int(input("Enter 0 for heads and 1 for tails: "))
print(coin_flip(user_guess))

#14
from random import randint
value = randint(0,9)
def guess_num(guess):
    if guess == "even":
        if value % 2 == 0:
            output = "Correct!"
        else:
            output = "Incorrect!"
    elif guess == "odd":
        if value % 2 == 1:
            output = "Correct!"
        else:
            output = "Incorrect!"
    return output
user_guess = (input("Enter odd or even: "))
print(guess_num(user_guess))
'''
#15
